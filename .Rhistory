summary(nn)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=5, linear.output = TRUE)
plot(nn)
summary(nn)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=5, linear.output = TRUE)
plot(nn)
summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
df<-na.omit(read.csv('ToyotaCorolla.csv'))
dummy<-fastDummies::dummy_cols(df$Fuel_Type)
df$cng<-dummy$.data_CNG
df$diesel<-dummy$.data_Diesel
df$petrol<-dummy$.data_Petrol
df<-df[,-8]
df$Price<-(df$Price-min(df$Price))/(max(df$Price)-min(df$Price))
#d<-preProcess(df,method="range")
samp<-sample(rownames(df),dim(df)[1]*.6)
train<-df[samp,]
notSamp<-setdiff(rownames(df),samp)
test<-df[notSamp,]
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=2, linear.output = TRUE)
plot(nn)
summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=5, linear.output = TRUE)
plot(nn)
summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=c(5,5), linear.output = TRUE)
plot(nn)
summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=c(5,5), linear.output = TRUE)
plot(nn)
summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
df$Age_08_04<-(df$Age_08_04-min(df$Age_08_04))/ (max(df$Age_08_04)-min(df$Age_08_04))
df$KM<-(df$KM -min(df$KM))/(max(df$KM)-min(df$KM))
df$Quarterly_Tax<-(df$Quarterly_Tax-min(df$Quarterly_Tax))/(max(df$Quarterly_Tax)-min(df$Quarterly_Tax))
df$Guarantee_Period<-df$Guarantee_Period/max(df$Guarantee_Period)
df<-na.omit(read.csv('ToyotaCorolla.csv'))
dummy<-fastDummies::dummy_cols(df$Fuel_Type)
df$cng<-dummy$.data_CNG
df$diesel<-dummy$.data_Diesel
df$petrol<-dummy$.data_Petrol
df<-df[,-8]
df$Price<-(df$Price-min(df$Price))/(max(df$Price)-min(df$Price))
df$Age_08_04<-(df$Age_08_04-min(df$Age_08_04))/ (max(df$Age_08_04)-min(df$Age_08_04))
df$KM<-(df$KM -min(df$KM))/(max(df$KM)-min(df$KM))
df$Quarterly_Tax<-(df$Quarterly_Tax-min(df$Quarterly_Tax))/(max(df$Quarterly_Tax)-min(df$Quarterly_Tax))
df$Guarantee_Period<-df$Guarantee_Period/max(df$Guarantee_Period)
#d<-preProcess(df,method="range")
samp<-sample(rownames(df),dim(df)[1]*.6)
train<-df[samp,]
notSamp<-setdiff(rownames(df),samp)
test<-df[notSamp,]
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=2, linear.output = TRUE)
plot(nn)
summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=2, linear.output = TRUE)
plot(nn)
#summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=5, linear.output = TRUE)
plot(nn)
#summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=c(5,5), linear.output = TRUE)
plot(nn)
#summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
nn<-neuralnet(Price~cng+diesel+petrol+Automatic+Doors+Airco+KM+HP+CD_Player+Age_08_04+Quarterly_Tax+Mfr_Guarantee+Guarantee_Period+Automatic_airco+Powered_Windows+Sport_Model+Tow_Bar, data=train, hidden=5, linear.output = TRUE)
plot(nn)
#summary(nn)
pred<-predict(nn,train)
RMSE(pred,train$Price)
pred<-predict(nn, test)
RMSE(pred,test$Price)
setwd("~/")
df<-na.omit(read.csv('TOTALNSA.csv'))
model<-ts(df, start=c(1967,1),end = c(2020,3),frequency = 12)
View(model)
plot(model)
arima(seasonTS, order = c(1,0,0))
df<-na.omit(read.csv('TOTALNSA.csv'))
seasonTS<-ts(df, start=c(1967,1),end = c(2020,3),frequency = 12)
arima(seasonTS, order = c(1,0,0))
df<-na.omit(read.csv('TOTALNSA.csv'))
seasonTS<-ts(df$TOTALNSA, start=c(1967,1),end = c(2020,3),frequency = 12)
arima(seasonTS, order = c(1,0,0))
df<-na.omit(read.csv('TOTALNSA.csv'))
seasonTS<-ts(df$TOTALNSA, start=c(1967,1),end = c(2020,3),frequency = 12)
arima(seasonTS, order = c(1,1,1))
arims<-arima(seasonTS, order = c(1,0,0))
plot(arims)
fore<-forecast::forecast(arims)
View(fore)
fore<-forecast::forecast(arims,h=1)
plot(fore)
df2<-na.omit(read.csv('TOTALSA.csv'))
arima2<-arima(noSeason, order = c(1,0,0))
noSeason<-ts(df2$TOTALSA,start=c(1967,1),end = c(2020,3),frequency = 12)
arima2<-arima(noSeason, order = c(1,0,0))
fore<-forecast::forecast(arima2,h=1)
fore2<-forecast::forecast(arima2,h=1)
plot(fore2)
library(fpp)
dec<-decompose(seasonTS,"additive")
seasAdj<-seasonTS-dec$seasonal
fr<-forecast(ar,h=1)
ar<-arima(seasAdj, order=c(1,0,0))
fr<-forecast(ar,h=1)
plot(fr)
lm<-tslm(seasAdj~trend+I(trend^2))
range=c(min(df$TOTALNSA),max(df$TOTALNSA))
plot(seasAdj,main="Car sales (No Seasonality)",xlab="Time",ylab="Money",ylim=range)+lines(lm$fitted.values,lwd=2)
seasAdj<-seasonTS-dec$seasonal
plot(seasAdj)
fr<-forecast(ar,h=10)
plot(fr)
df<-na.omit(read.csv('TOTALNSA.csv'))
seasonTS<-ts(df$TOTALNSA, start=c(1967,1),end = c(2020,3),frequency = 12)
arims<-arima(seasonTS, order = c(1,0,0))
fore<-forecast::forecast(arims,h=100)
plot(fore)
df2<-na.omit(read.csv('TOTALSA.csv'))
noSeason<-ts(df2$TOTALSA,start=c(1967,1),end = c(2020,3),frequency = 12)
arima2<-arima(noSeason, order = c(1,0,0))
fore2<-forecast::forecast(arima2,h=100)
plot(fore2)
library(fpp)
dec<-decompose(seasonTS,"additive")
seasAdj<-seasonTS-dec$seasonal
ar<-arima(seasAdj, order=c(1,0,0))
fr<-forecast(ar,h=100)
plot(fr)
range=c(min(df$TOTALNSA),max(df$TOTALNSA))
lm<-tslm(seasAdj~trend+I(trend^2))
plot(seasAdj,main="Car sales (No Seasonality)",xlab="Time",ylab="Money",ylim=range)+lines(lm$fitted.values,lwd=2)
shiny::runApp('Cler-it-y')
setwd("~/GitHub/Cler-it-y")
runApp('~/Cler-it-y')
runApp('~/Cler-it-y')
runApp('~/Cler-it-y')
setwd("~/")
df<-read.csv('CanadianWorkHours.csv')
cts<-window(ts(df),start=1966, end=2000)
cts<-ts(df$Hours, start=1966, end=2000)
#cts<-window(ts(df),start=1966, end=2000)
Acf(cts)
library(forecast)
df<-read.csv('CanadianWorkHours.csv')
cts<-ts(df$Hours, start=1966, end=2000)
#cts<-window(ts(df),start=1966, end=2000)
Acf(cts)
#cts<-window(ts(df),start=1966, end=2000)
cor(cts)
#cts<-window(ts(df),start=1966, end=2000)
cor(cts[1,length(cts-1)],cts[2,length(cts)])
library(forecast)
df<-read.csv('CanadianWorkHours.csv')
cts<-ts(df$Hours, start=1966, end=2000)
#cts<-window(ts(df),start=1966, end=2000)
cor(cts[1,length(cts-1)],cts[2,length(cts)])
library(forecast)
df<-read.csv('CanadianWorkHours.csv')
cts<-ts(df$Hours, start=1966, end=2000)
Acf(cts)
samp<-sample(rownames(df),dim(df)[1]*.6)
train<-df[samp,]
notSamp<-setdiff(rownames(df),samp)
test<-df[notSamp,]
df<-read.csv('adult-modified.csv')
head(df)
df$age <- as.numeric(df$age)
View(df)
meanAge= sum(na.omit(df$age))/length(na.omit(df$age))
df$age <- as.numeric(df$age)
meanAge= sum(na.omit(df$age))/length(na.omit(df$age))
df$age[is.na(df$age)]=meanAge
summary(df)
df$education[is.na(df$education)]=meanEd
df$education <- as.numeric(df$education)
meanEd= sum(na.omit(df$education))/length(na.omit(df$education))
df$education[is.na(df$education)]=meanEd
df$hours.per.week <- as.numeric(df$hours.per.week)
meanHours= sum(na.omit(df$hours.per.week))/length(na.omit(df$hours.per.week))
df$hours.per.week[is.na(df$hours.per.week)]=meanHours
View(df)
df=df[(df != '?').all(axis=1)]
df=df[(df != '?')]
df=data.frame(df[(df != '?')])
View(df)
df<-read.csv('adult-modified.csv')
head(df)
df$age <- as.numeric(df$age)
meanAge= sum(na.omit(df$age))/length(na.omit(df$age))
df$age[is.na(df$age)]=meanAge
df$education <- as.numeric(df$education)
meanEd= sum(na.omit(df$education))/length(na.omit(df$education))
df$education[is.na(df$education)]=meanEd
df$hours.per.week <- as.numeric(df$hours.per.week)
meanHours= sum(na.omit(df$hours.per.week))/length(na.omit(df$hours.per.week))
df$hours.per.week[is.na(df$hours.per.week)]=meanHours
df[(df == '?'),] = NULL
df[(df == '?')] = NULL
df[,(df == '?')] = NULL
df[(df == '?'),"workclass"] = NULL
df[(df$workclass == '?'),"workclass"] = NULL
df<-df - df[(df$workclass == '?'),]
df<- df[-(df$workclass == '?'),]
d<- df[,(df$workclass == '?')]
df<-read.csv('adult-modified.csv')
head(df)
df$age <- as.numeric(df$age)
meanAge= sum(na.omit(df$age))/length(na.omit(df$age))
df$age[is.na(df$age)]=meanAge
df$education <- as.numeric(df$education)
meanEd= sum(na.omit(df$education))/length(na.omit(df$education))
df$education[is.na(df$education)]=meanEd
df$hours.per.week <- as.numeric(df$hours.per.week)
meanHours= sum(na.omit(df$hours.per.week))/length(na.omit(df$hours.per.week))
df$hours.per.week[is.na(df$hours.per.week)]=meanHours
d<- df[,(df$workclass == '?')]
d<- df[(df$workclass == '?'),]
df<-except(df,d)
d<- df[-(df$workclass == '?'),]
View(d)
d<- df[-c(df$workclass == '?'),]
df<-read.csv('adult-modified.csv')
head(df)
df$age <- as.numeric(df$age)
meanAge= sum(na.omit(df$age))/length(na.omit(df$age))
df$age[is.na(df$age)]=meanAge
df$education <- as.numeric(df$education)
meanEd= sum(na.omit(df$education))/length(na.omit(df$education))
df$education[is.na(df$education)]=meanEd
df$hours.per.week <- as.numeric(df$hours.per.week)
meanHours= sum(na.omit(df$hours.per.week))/length(na.omit(df$hours.per.week))
df$hours.per.week[is.na(df$hours.per.week)]=meanHours
d<- df[(df$workclass == '?'),]
library(dplyr)
df<- anti_join(df,d)
summary(df)
write.csv(df,file="adultData.csv")
d<-df
train <- sample(d, FALSE, 0.8)
test <- except(d, train)
d2 = read.csv('testing')
d1 = read.csv('adultData.csv')
d2 = read.csv('testing')
d2 = read.csv('testing.csv')
setwd("~/")
d2 = read.csv('training.csv')
d3 = anti_join(d1,d2)
write.csv(d3,file="testing.csv")
head(df)
df<-read.csv('Coursetopics.csv')
head(df)
mat<-as.matrix(df[,-1])
df<-read.csv('Coursetopics.csv')
head(df)
mat<-as.matrix(df[,-1])
trans<- as(mat, "transactions")
print(mat)
df<-read.csv('Coursetopics.csv')
head(df)
mat<-as.matrix(df[,-1])
print(mat)
mat
df<-read.csv('Coursetopics.csv')
head(df)
mat<-as.matrix(df[,-1])
trans<- as(mat, "transactions")
trans<- as(mat, "transaction")
df<-read.csv('Coursetopics.csv')
head(df)
mat<-as.matrix(df[,-1])
trans<- as(mat, "transaction")
View(dfSorted2)
describe(df)
df.describe()
df.describe
df<-read.csv('Coursetopics.csv')
head(df)
mat<-as.matrix(df[,-1])
trans<- as(mat, "transactions")
rules <- apriori(mat, parameter=list(supp=.2,conf=.6, target="rules"))
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1])
trans<- as(mats, "transactions")
library(arules)
install.packages("arules")
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1])
trans<- as(mats, "transactions")
inspect(trans)
rules <- apriori(trans, parameter=list(supp=.2,conf=.6, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1])
trans<- as(mats, "transactions")
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.2,conf=.6, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1])
trans<- as(mats, "transactions")
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.2,conf=.5, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1])
trans<- as(mats, "transactions")
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.2,conf=.5, target="rules"))
#inspect(head(sort(rules,by="lift"),n=5))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1]);
trans<- as(mats, "transactions");
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.2,conf=.5, target="rules"))
#inspect(head(sort(rules,by="lift"),n=5))
summary(rules)
rules <- apriori(trans, parameter=list(supp=.1,conf=.5, target="rules"))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1]);
trans<- as(mats, "transactions");
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.1,conf=.5, target="rules"))
summary(rules)
#inspect(head(sort(rules,by="lift"),n=5))
trans<- as(mats, "transactions");
View(trans)
View(mat)
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1]);
trans<- as(mats, "transactions");
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.1,conf=.3, target="rules"))
summary(rules)
#inspect(head(sort(rules,by="lift"),n=5))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1]);
trans<- as(mats, "transactions");
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.1,conf=.9, target="rules"))
summary(rules)
#inspect(head(sort(rules,by="lift"),n=5))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1]);
trans<- as(mats, "transactions");
#inspect(trans)
rules <- apriori(trans, parameter=list(supp=.6,conf=.9, target="rules"))
summary(rules)
#inspect(head(sort(rules,by="lift"),n=5))
rules <- apriori(trans, parameter=list(supp=.2,conf=.1, target="rules"))
summary(rules)
print(rules)
head(rules)
inspect(head(sort(rules,by="lift"),n=5))
library(arules)
df<-read.csv('Coursetopics.csv')
head(df)
mats<-as.matrix(df[,-1]);
View(mat)
rules <- apriori(trans, parameter=list(supp=.2,conf=.1, target="rules"))
summary(rules)
inspect(head(sort(rules,by="lift"),n=5))
df<-df[-1,]
mats<-as.matrix(df);
trans<- as(mats, "transactions");
rules <- apriori(trans, parameter=list(supp=.2,conf=.1, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
df<-df[apply(df,1,function(x)!all(x==0)),]
mats<-as.matrix(df);
trans<- as(mats, "transactions");
rules <- apriori(trans, parameter=list(supp=.2,conf=.1, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
rules <- apriori(trans, parameter=list(supp=.4,conf=.4, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
rules <- apriori(trans, parameter=list(supp=.05,conf=.4, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
rules <- apriori(trans, parameter=list(supp=.05,conf=.1, target="rules"))
inspect(head(sort(rules,by="lift"),n=5))
inspect(head(sort(rules,by="lift"),n=8))
inspect(head(sort(rules,by="lift"),n=5))
inspect(head(sort(rules,by="lift"),n=5))
inspect(head(sort(rules,by="lift"),n=6))
d<-as.vector(df[input$school,11:22])}
d<-as.vector(df[input$school,11:22])
shiny::runApp('GitHub/Cler-it-y/clerityApp')
setwd("~/GitHub/Cler-it-y/clerityApp")
runApp()
runApp()
runApp()
runApp()
runApp()
x<-c(6,7,8,9,10,11,12,13,14,15,16,17)
d<-ts(as.vector(df[input$school,11:22]))
# Define server logic required to draw a histogram
server <- function(input, output) {
output$linePlot <- renderPlot({
if(input$per1000==0){
d<-ts(as.vector(df[input$school,11:22]))
}
else{
d<-ts(as.vector(df[input$school, 25:36]))
}
plot(x,d,xlab = "Year", ylab="Total Crime Events", main=df$INSTNM[input$school], ylim = c(0,(1.2*max(d))))
lines(x,d,type="o")
})
}
print(d)
runApp()
runApp()
setwd("~/GitHub/Cler-it-y")
df<-read_csv('data.csv')
df<-read_csv('data.csv')
df<-read.csv('data.csv')
df$pc6 <- df$allCrime6/df$Total.678
df$pt6 <- df$pc6 * 1000
df$pc7 <- df$allCrime7/df$Total.678
df$pt7 <- df$pc7 * 1000
df$pc8 <- df$allCrime8/df$Total.678
df$pt8 <- df$pc8 * 1000
df$pc9 <- df$allCrime9/df$Total.91011
df$pt9 <- df$pc9 * 1000
df<-read.csv('data.csv')
df$pc6 <- df$allCrime6/df$Total.678
df$pc7 <- df$allCrime7/df$Total.678
df$pc8 <- df$allCrime8/df$Total.678
df$pc9 <- df$allCrime9/df$Total.91011
df$pc10 <- df$allCrime10/df$Total.91011
df$pc11 <- df$allCrime11/df$Total.91011
df$pc12 <- df$allCrime12/df$Total.121314
df$pc13 <- df$allCrime13/df$Total.121314
df$pc14 <- df$allCrime14/df$Total.121314
df$pc15 <- df$allCrime15/df$Total.151617
df$pc16 <- df$allCrime16/df$Total.151617
df$pc17 <- df$allCrime17/df$Total.151617
df$pt6 <- df$pc6 * 1000
df$pt7 <- df$pc7 * 1000
df$pt8 <- df$pc8 * 1000
df$pt9 <- df$pc9 * 1000
df$pt10 <- df$pc10 * 1000
df$pt11 <- df$pc11 * 1000
df$pt12 <- df$pc12 * 1000
df$pt13 <- df$pc13 * 1000
df$pt14 <- df$pc14 * 1000
df$pt15 <- df$pc15 * 1000
df$pt16 <- df$pc16 * 1000
df$pt17 <- df$pc17 * 1000
View(df)
write.csv('data.csv')
write.csv(df,'data.csv')
df <-read.csv('data.csv')
View(df)
runApp('clerityApp')
df <-read.csv('data.csv')
runApp('clerityApp')
